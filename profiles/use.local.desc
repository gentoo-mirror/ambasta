# This file is deprecated as per GLEP 56 in favor of metadata.xml.
# Please add your descriptions to your package's metadata.xml ONLY.
# * generated automatically using pmaint *

app-editors/neovim:lto - Build with Link Time Optimization (LTO)
app-editors/neovim:nvimpager - Install nvimpager symlink to less.sh macro
app-editors/neovim:tui - Build the neovim unix tui
app-editors/vim:X - Link console vim against X11 libraries to enable title and clipboard features in xterm
app-editors/vim:cscope - Enable cscope interface
app-editors/vim:racket - Enable support for Scheme using dev-scheme/racket
app-editors/vim:terminal - Enable terminal emulation support
app-editors/vim:vim-pager - Install vimpager and vimmanpager links
app-emulation/snapd:apparmor - Enable AppArmor support.
app-emulation/snapd:cgroup-hybrid - Default to hybrid (legacy) cgroup hierarchy instead of unified (modern).
app-emulation/snapd:forced-devmode - Automatically disable application confinement if feature detection fails.
dev-lang/rust:clippy - Install clippy, Rust code linter
dev-lang/rust:dist - Install dist tarballs (used for bootstrapping)
dev-lang/rust:miri - Install miri, an interpreter for Rust's mid-level intermediate representation (requires USE=nightly)
dev-lang/rust:nightly - Enable nightly (UNSTABLE) features
dev-lang/rust:parallel-compiler - Build a multi-threaded rustc (experimental, not tested by upstream)
dev-lang/rust:rls - Install rls, Rust Language Server (used with IDEs supporting RLS protocol)
dev-lang/rust:rust-src - Install rust-src, needed by developer tools and for build-std (cross)
dev-lang/rust:rustfmt - Install rustfmt, Rust code formatter
dev-lang/rust:system-bootstrap - Bootstrap using installed rust compiler
dev-lang/rust:system-llvm - Use the system LLVM install
dev-lang/rust:wasm - Build support for the wasm32-unknown-unknown target
dev-libs/librdkafka:lz4 - Enable support for Kafka's LZ4 compression based on KIP-57 (uses app-arch/lz4)
dev-util/clion:custom-jdk - Install and use IntelliJ's custom JRE.
media-libs/libplacebo:glslang - Use dev-util/glslang to compile GLSL
media-libs/libplacebo:lcms - Add support for color management via media-libs/lcms
media-libs/libplacebo:shaderc - Use media-libs/shaderc to compile GLSL
media-libs/libplacebo:vulkan - Add support for the vulkan graphics API
media-libs/mesa:classic - Build drivers based on the classic architecture.
media-libs/mesa:d3d9 - Enable Direct 3D9 API through Nine state tracker. Can be used together with patched wine.
media-libs/mesa:egl - Enable EGL support.
media-libs/mesa:gallium - Build drivers based on Gallium3D, the new architecture for 3D graphics drivers.
media-libs/mesa:gbm - Enable the Graphics Buffer Manager for EGL on KMS.
media-libs/mesa:gles1 - Enable GLESv1 support.
media-libs/mesa:gles2 - Enable GLESv2 support.
media-libs/mesa:llvm - Enable LLVM backend for Gallium3D.
media-libs/mesa:lm-sensors - Enable Gallium HUD lm-sensors support.
media-libs/mesa:opencl - Enable the Clover Gallium OpenCL state tracker.
media-libs/mesa:osmesa - Build the Mesa library for off-screen rendering.
media-libs/mesa:valgrind - Compile in valgrind memory hints
media-libs/mesa:vdpau - Enable the VDPAU acceleration interface for the Gallium3D Video Layer.
media-libs/mesa:vulkan - Enable Vulkan drivers
media-libs/mesa:vulkan-overlay - Build vulkan-overlay-layer which displays Frames Per Second and other statistics
media-libs/mesa:wayland - Enable support for dev-libs/wayland
media-libs/mesa:xa - Enable the XA (X Acceleration) API for Gallium3D.
media-libs/mesa:xvmc - Enable the XvMC acceleration interface for the Gallium3D Video Layer.
media-libs/mesa:zink - Enable the Zink OpenGL-over-Vulkan Gallium driver
media-video/mpv:archive - Enable support for various archive formats via app-arch/libarchive
media-video/mpv:bluray - Enable playback of Blu-ray filesystems
media-video/mpv:cli - Build mpv CLI player
media-video/mpv:cplugins - Enable C plugins support
media-video/mpv:cuda - Enable hardware video decoding via Nvidia CUDA
media-video/mpv:drm - Enable Kernel Mode Setting / Direct Rendering Manager based video output
media-video/mpv:egl - Enable support for various EGL-based video outputs / backends
media-video/mpv:gamepad - Enable gamepad input support
media-video/mpv:gbm - Enable Graphics Buffer Manager based EGL video backend
media-video/mpv:jpeg - Enable support for saving screenshots in JPEG format
media-video/mpv:libmpv - Build mpv shared library
media-video/mpv:lua - Enable Lua scripting, OSC (On Screen Controller) GUI and net-misc/youtube-dl hook-script
media-video/mpv:opengl - Enable support for various OpenGL-based video backends
media-video/mpv:raspberry-pi - Enable support for the Raspberry Pi
media-video/mpv:rubberband - Enable high quality pitch correction via media-libs/rubberband
media-video/mpv:sdl - Enable media-libs/libsdl2 based video and audio outputs (Note: these outputs exist for compatibility reasons only, avoid if possible)
media-video/mpv:tools - Install extra tools: mpv_identify.sh, mpv_idet.sh, and umpv
media-video/mpv:uchardet - Enable subtitles charset discovery via app-i18n/uchardet
media-video/mpv:vulkan - Enable support for various Vulkan-based video backends
media-video/mpv:zimg - Enable libzimg support (for vf_fingerprint)
media-video/pipewire:jack - Enable SPA JACK plugin and emulation to be able to run JACK applications on top of PipeWire
media-video/pipewire:pulseaudio - Enable emulation to be able to run PulseAudio applications on top of PipeWire
media-video/pipewire:vulkan - Enable vulkan spa plugin integration
net-misc/kafka-bin:connect - Install init for Kafka Connect Distributed mode
net-misc/kafka-bin:internal-zookeeper - Use bundled local zookeeper instance
sys-auth/polkit:elogind - Use sys-auth/elogind for session tracking
sys-auth/polkit:systemd - Use sys-apps/systemd for session tracking
sys-devel/gcc:ada - Build the ADA language (GNAT) frontend
sys-devel/gcc:cet - Enable support for Intel Control Flow Enforcement Technology (CET)
sys-devel/gcc:d - Enable support for the D programming language
sys-devel/gcc:fixed-point - Enable fixed-point arithmetic support for MIPS targets in gcc (Warning: significantly increases compile time!)
sys-devel/gcc:go - Build the GCC Go language frontend.
sys-devel/gcc:graphite - Add support for the framework for loop optimizations based on a polyhedral intermediate representation
sys-devel/gcc:jit - Enable libgccjit so other applications can embed gcc for Just-In-Time compilation. This will slow down the compiler a bit as it forces all of the toolchain to be shared libs.
sys-devel/gcc:libssp - Build SSP support into a dedicated library rather than use the code in the C library (DO NOT ENABLE THIS IF YOU DON'T KNOW WHAT IT DOES)
sys-devel/gcc:lto - Build using Link Time Optimizations (LTO)
sys-devel/gcc:mpx - Enable support for Intel Memory Protection Extensions (MPX)
sys-devel/gcc:nptl - Enable support for Native POSIX Threads Library, the new threading module (requires linux-2.6 or better usually)
sys-devel/gcc:objc - Build support for the Objective C code language
sys-devel/gcc:objc++ - Build support for the Objective C++ language
sys-devel/gcc:objc-gc - Build support for the Objective C code language Garbage Collector
sys-devel/gcc:pgo - Build GCC using Profile Guided Optimization (PGO)
sys-devel/gcc:sanitize - Build support for various sanitizer functions (ASAN/TSAN/etc...)
sys-devel/gcc:ssp - Build packages with stack smashing protector on by default
sys-devel/gcc:systemtap - enable systemtap static probe points
sys-devel/gcc:valgrind - Enable valgrind annotations for gcc internals (useful for gcc debugging).
sys-devel/gcc:vtv - Build support for virtual table verification (a C++ hardening feature)
www-client/chromium:component-build - Split build into more shared libraries to speed up linking. Mostly intended for debugging and development, NOT RECOMMENDED for general use.
www-client/chromium:debug - Enable DCHECK feature with severity configurable at runtime. Mostly intended for debugging and development, NOT RECOMMENDED for general use.
www-client/chromium:gtk4 - Build with GTK4 headers.
www-client/chromium:hangouts - Enable support for Google Hangouts features such as screen sharing
www-client/chromium:headless - Build Ozone only with headless backend, NOT RECOMMENDED for general use.
www-client/chromium:js-type-check - Enable JavaScript type-checking for Chrome's web technology-based UI. Requires Java.
www-client/chromium:libcxx - Use bundled libc++ instead of libstdc++ for building.
www-client/chromium:official - Enable Official build instead of Developer build.
www-client/chromium:pic - Disable optimized assembly code that is not PIC friendly
www-client/chromium:proprietary-codecs - Enable codecs for patent-encumbered audio and video formats.
www-client/chromium:screencast - Enable support for remote desktop and screen cast using media-video/pipewire
www-client/chromium:suid - Build the SUID sandbox, which is only needed on CONFIG_USER_NS=n kernels
www-client/chromium:system-ffmpeg - Use system ffmpeg instead of the bundled one
www-client/chromium:system-harfbuzz - Use system harfbuzz instead of the bundled one.
www-client/chromium:system-icu - Use system icu instead of the bundled one
www-client/chromium:system-png - Use system libpng instead of the bundled one.
www-client/chromium:widevine - Unsupported closed-source DRM capability (required by Netflix VOD)
www-client/firefox:clang - Use Clang compiler instead of GCC
www-client/firefox:eme-free - Disable EME (DRM plugin) cabability at build time
www-client/firefox:geckodriver - Enable WebDriver support
www-client/firefox:gmp-autoupdate - Allow Gecko Media Plugins (binary blobs) to be automatically downloaded and kept up-to-date in user profiles
www-client/firefox:hwaccel - Force-enable hardware-accelerated rendering (Mozilla bug 594876)
www-client/firefox:libproxy - Enable libproxy support
www-client/firefox:lto - Enable Link Time Optimization (LTO). Requires Gold linker when using GCC or LDD linker when using Clang
www-client/firefox:openh264 - Use media-libs/openh264 for H.264 support instead of downloading binary blob from Mozilla at runtime
www-client/firefox:pgo - Add support for profile-guided optimization using gcc-4.5, for faster binaries. This option will double the compile time.
www-client/firefox:screencast - Enable support for remote desktop and screen cast using media-video/pipewire
www-client/firefox:sndio - Enable support for the media-sound/sndio backend
www-client/firefox:system-av1 - Use the system-wide media-libs/dav1d and media-libs/libaom library instead of bundled.
www-client/firefox:system-harfbuzz - Use the system-wide media-libs/harfbuzz and media-gfx/graphite2 instead of bundled.
www-client/firefox:system-icu - Use the system-wide dev-libs/icu instead of bundled.
www-client/firefox:system-jpeg - Use the system-wide media-libs/libjpeg-turbo instead of bundled.
www-client/firefox:system-libevent - Use the system-wide dev-libs/libevent instead of bundled.
www-client/firefox:system-libvpx - Use the system-wide media-libs/libvpx instead of bundled.
www-client/firefox:system-png - Use the system-wide media-libs/libpng instead of bundled (requires APNG patches).
www-client/firefox:system-webp - Use the system-wide media-libs/libwebp instead of bundled.
www-client/firefox-bin:gmp-autoupdate - Allow Gecko Media Plugins (binary blobs) to be automatically downloaded and kept up-to-date in user profiles
x11-libs/vte:icu - Enable legacy charset support using dev-libs/icu
x11-libs/vte:systemd - Support moving terminal child processes to their own systemd user scopes to avoid terminal getting killed due to child causing OOM
