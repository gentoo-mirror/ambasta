From 5cba4ba52f05e9552eb1eea30740ca1e7bd55d86 Mon Sep 17 00:00:00 2001
From: Amit Prakash Ambasta <amit.prakash.ambasta@gmail.com>
Date: Fri, 15 Jul 2022 11:37:24 +0530
Subject: [PATCH] Ambient loaders

Signed-off-by: Amit Prakash Ambasta <amit.prakash.ambasta@gmail.com>
---
 lib/internal/process/esm_loader.js | 22 ++++++++++++++++------
 1 file changed, 16 insertions(+), 6 deletions(-)

diff --git a/lib/internal/process/esm_loader.js b/lib/internal/process/esm_loader.js
index 4634ff5a..5975bf6f 100644
--- a/lib/internal/process/esm_loader.js
+++ b/lib/internal/process/esm_loader.js
@@ -1,6 +1,7 @@
 'use strict';
 
 const {
+  ArrayPrototypePushApply,
   ObjectCreate,
 } = primordials;
 
@@ -60,17 +61,26 @@ async function initializeLoader() {
     cwd = 'file:///';
   }
 
+  const keyedExportsList = [];
+
   // A separate loader instance is necessary to avoid cross-contamination
   // between internal Node.js and userland. For example, a module with internal
   // state (such as a counter) should be independent.
   const internalEsmLoader = new ESMLoader();
 
-  // Importation must be handled by internal loader to avoid poluting userland
-  const keyedExportsList = await internalEsmLoader.import(
-    customLoaders,
-    pathToFileURL(cwd).href,
-    ObjectCreate(null),
-  );
+  for (let idx = 0; idx < customLoaders.length; idx += 1) {
+    const customLoader = customLoaders[idx];
+
+    // Importation must be handled by internal loader to avoid poluting userland
+    const keyedExportsSublist = await internalEsmLoader.import(
+      [customLoader],
+      pathToFileURL(cwd).href,
+      ObjectCreate(null)
+    );
+
+    await internalEsmLoader.addCustomLoaders(keyedExportsSublist);
+    ArrayPrototypePushApply(keyedExportsList, keyedExportsSublist);
+  }
 
   // Hooks must then be added to external/public loader
   // (so they're triggered in userland)
-- 
2.35.1

